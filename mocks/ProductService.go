// Code generated by mockery v2.7.5. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/subodhqss/go-training/models"
)

// ProductService is an autogenerated mock type for the ProductService type
type ProductService struct {
	mock.Mock
}

// PrintProduct provides a mock function with given fields:
func (_m *ProductService) PrintProduct() []*models.Product {
	ret := _m.Called()

	var r0 []*models.Product
	if rf, ok := ret.Get(0).(func() []*models.Product); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Product)
		}
	}

	return r0
}

// PrintProductId provides a mock function with given fields: _a0
func (_m *ProductService) PrintProductId(_a0 string) *models.Product {
	ret := _m.Called(_a0)

	var r0 *models.Product
	if rf, ok := ret.Get(0).(func(string) *models.Product); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Product)
		}
	}

	return r0
}

// SaveProduct provides a mock function with given fields: _a0
func (_m *ProductService) SaveProduct(_a0 models.Product) *models.Product {
	ret := _m.Called(_a0)

	var r0 *models.Product
	if rf, ok := ret.Get(0).(func(models.Product) *models.Product); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Product)
		}
	}

	return r0
}

// UpdateProduct provides a mock function with given fields: _a0
func (_m *ProductService) UpdateProduct(_a0 models.Product) *models.Product {
	ret := _m.Called(_a0)

	var r0 *models.Product
	if rf, ok := ret.Get(0).(func(models.Product) *models.Product); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Product)
		}
	}

	return r0
}
