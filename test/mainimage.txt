package main
import (
	"fmt"
	"html/template"
	"io/ioutil"
	"net/http"
	"os"
)

var tpl *template.Template

func uploadFilee(w http.ResponseWriter, r *http.Request) {
	fmt.Println("r.method:", r.Method)
	if r.Method == "GET" {
		tpl.ExecuteTemplate(w, "fileUpload.html", nil)
		return
	}
	r.ParseMultipartForm(10)
	file, fileHeader, err := r.FormFile("myFile")
	if err != nil {
		fmt.Println(err)
		return
	}
	defer file.Close()
	fmt.Printf("fileHeader.Filename: %v\n", fileHeader.Filename)
	fmt.Printf("fileHeader.Size: %v\n", fileHeader.Size)
	fmt.Printf("fileHeader.Header: %v\n", fileHeader.Header)

	contentType := fileHeader.Header["Content-Type"][0]
	fmt.Println("Content Type:", contentType)
	var osFile *os.File
	if contentType == "image/jpeg"  {
		osFile, err = ioutil.TempFile("images", "*.jpg")
	} else if contentType == "application/pdf" {
		osFile, err = ioutil.TempFile("PDFs", "*.pdf")
	} else if contentType == "text/javascript" {
		osFile, err = ioutil.TempFile("js", "*.js")
	}
	fmt.Println("error:", err)	
	defer osFile.Close()


	fileBytes, err := ioutil.ReadAll(file)
	if err != nil {
		fmt.Println(err)
	}
	osFile.Write(fileBytes)

	fmt.Fprintf(w, "Your file was Successfully Uploaded!\n")

}

func main() {
	tpl, _ = tpl.ParseGlob("templates/*.html")
	http.HandleFunc("/upload", uploadFile)
	http.HandleFunc("/home", homePageHandler)
	
}
func homePageHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, "Welcome to the home page")
}